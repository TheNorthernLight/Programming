1.

Make simple Supermarket -program,

    having 10 products with prices in an array of integers as follows: int prodprices[] = { 10, 14, 22, 33, 44, 13, 22, 55, 66, 77 };
    asking (cin >> prodnbr) product number from 1 to 10 and summing its price to totalsum and printing product number and price for every product as in example.
    asking products until user gives '0' to quit the program (do while-loop).
    printing  "Total:" and the total sum of prices.
    asking "Payment:" from user and printing "Change:" and finally  calculating and printing the amount of change (payment - totalsum) to customer.

You must use in this program: [], while, cin, cout, endl

Example output:
Supermarket
===========
Please select product (1-10) 0 to Quit:1
Product: 1 Price: 10
Please select product (1-10) 0 to Quit:6
Product: 6 Price: 13
Please select product (1-10) 0 to Quit:11
Please select correct product (1-10)
Please select product (1-10) 0 to Quit:10
Product: 10 Price: 77
Please select product (1-10) 0 to Quit:5
Product: 5 Price: 44
Please select product (1-10) 0 to Quit:0
Total: 144
Payment: 200
Change: 56

The output of the program must be exactly the same as the example output (the most strict comparison level)






2.



Make class Employee and its initialization method. Employee-class will have 2 attributes: id and name.

Make program, which:

    fills the vector (vector<Employee>) with objects of Employee class. Id is a serial number from 1 and name will be asked from user and is given in a form "Firstname Surname". Use getline (cin,name) to read name.
    ends when user gives '0' instead of a name. 
    in the end prints all Employees from the vector in a format shown in example below.

 

Example output:
Please enter employee name (0 to quit):Jane Doe
Please enter employee name (0 to quit):John Johnson
Please enter employee name (0 to quit):Richard Roe
Please enter employee name (0 to quit):0
Id: 1 Name: Jane Doe
Id: 2 Name: John Johnson
Id: 3 Name: Richard Roe

The output of the program must be exactly the same as the example output (the most strict comparison level)








3.







Make function bubbleSort using bubble sort algorithm to sort numbers given by user; order numbers into the ascending order. Function header and return clauses are given to you. Function gets unsorted table and number of elements as function parameters.

Bubble Sort is the simplest sorting algorithm that works by repeatedly swapping the adjacent elements if they are in wrong order. 

https://en.wikipedia.org/wiki/Bubble_sort

Example output:
Please Enter the Total Number of Elements : 5
Please enter the 1 Element:4
Please enter the 2 Element:3
Please enter the 3 Element:-1
Please enter the 4 Element:9
Please enter the 5 Element:6
The Sorted List in Ascending Order: [-1, 3, 4, 6, 9]

The output of the program must be exactly the same as the example output (the most strict comparison level)







4.







Define first classes

    PayrollSystem, having method CalculatePayroll and getting a list of employees as a parameter. Method should calculate and print payroll for employees.
    SalaryEmployee, a subclass of Employee. SalaryEmployee has its own attribute MonthlySalary and method CalculateSalary, which will return the monthly salary of an employee.

Finally make then program,

    asking employee name as in previous Employee-exercise and also asking monthly salary for SalaryEmployee-class object.
    creating SalaryEmployee-objects and store them into a vector.
    ending when user gives '0' instead of a name. 
    using at the end PayrollSystem to print Payroll for Employees in a format shown in the example below.


Example output:
Please enter employee name (0 to quit): Jane Doe
Please enter salary: 5500
Please enter employee name (0 to quit): John Johnson
Please enter salary: 4500
Please enter employee name (0 to quit): Richard Roe
Please enter salary: 5050
Please enter employee name (0 to quit): 0
Employee Payroll
================
Payroll for: 1 - Jane Doe
- Check amount: 5500

Employee Payroll
================
Payroll for: 2 - John Johnson
- Check amount: 4500

Employee Payroll
================
Payroll for: 3 - Richard Roe
- Check amount: 5050

The output of the program must be exactly the same as the example output (the most strict comparison level)





5.



In this exercise we create two functions

    mysplit : which splits sentence (string) given as first argument using second argument as a separator character (char) to separate items. Function returns a vector of items (vector<string>).
    myjoin : which joins vector given as first argument (vector<string>) to a string separated with character given as second argument. Function returns a string (string).

 

Example output:
Please enter sentence: This is a sentence
This,is,a,sentence
This
is
a
sentence

The output of the program must be exactly the same as the example output (the most strict comparison level)




